'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
the sum of the even-valued terms.
'''

def sum_even_fibonacci_numbers():
    '''returns sum of even fibonacci numbers between 1 and 4,000,000'''

    #variables to be used
    first_element = 1
    second_element = 2
    temp = 0

    #sum
    sum_of_even_numbered_values = 0

    #while the number is not yet greater than 4,000,000
    while second_element < 4000000:

        #add number if even
        if second_element % 2 == 0:
            sum_of_even_numbered_values += second_element

        #temp used to keep track of first element
        temp = first_element

        #first element given value of second element
        first_element = second_element

        #second element equals the two previous elements
        second_element = first_element + temp

    #print result.
    print sum_of_even_numbered_values

#Call function
sum_even_fibonacci_numbers()
